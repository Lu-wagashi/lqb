#include<bits/stdc++.h> 
using namespace std;

const int maxn=35;
const int maxm=35;
int dp[maxn][maxm];	//dp[i][j]代表从(i,j)到达(n,m)的方案数 
int n,m;

int main()
{
	scanf("%d%d",&n,&m);
	for(int i=n;i>=1;i--)	//从(n,m)不断往上计算 
		{	
			for(int j=m;j>=1;j--)
			{
				if(j==m && i==n) 
				{	
					dp[i][j]=1;	//递归边界 
				}
				else if(j!=i || j==1)	dp[i][j]=dp[i+1][j]+dp[i][j+1];   
			}
		}
	//状态转移方程dp[i][j]=dp[i+1][j]+dp[i][j+1];向右或者向下走 	
	cout<<dp[1][1]; 
	return 0; 
}
